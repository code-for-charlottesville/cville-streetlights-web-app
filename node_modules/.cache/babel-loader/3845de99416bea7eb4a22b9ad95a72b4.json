{"ast":null,"code":"var _jsxFileName = \"/Users/rakshitakaulgud/Documents/react/streetlights/src/components/MainMap.js\";\nimport React, { Component } from 'react';\nimport { MapContainer, TileLayer, Marker, Popup, GeoJSON, Tooltip } from 'react-leaflet';\nimport streetlights from '../streetlights.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class MainMap extends Component {\n  constructor(props, context) {\n    super(props, context);\n    this.state = {\n      lat: 37.7749,\n      lng: -122.4194,\n      zoom: 13\n    };\n\n    this.showPreview = place => {// show place's description\n    };\n\n    this.changeCountryColor = event => {\n      event.target.setStyle({\n        color: \"green\",\n        fillColor: this.state.color,\n        fillOpacity: 1\n      });\n    };\n\n    this.onEachCountry = (fixture, layer) => {\n      const lampCD = fixture.properties.LAMP_CD;\n      console.log(lampCD);\n      layer.bindPopup(countryName);\n      layer.options.fillOpacity = Math.random(); //0-1 (0.1, 0.2, 0.3)\n      // const colorIndex = Math.floor(Math.random() * this.colors.length);\n      // layer.options.fillColor = this.colors[colorIndex]; //0\n\n      layer.on({\n        click: this.changeCountryColor\n      });\n    };\n\n    this.state = {\n      lat: 38.0293,\n      lng: -78.4767,\n      zoom: 13,\n      data: []\n    };\n    this.geoJsonLayer = /*#__PURE__*/React.createRef();\n  }\n\n  render() {\n    return this.props.streetlights ? /*#__PURE__*/_jsxDEV(MapContainer, {\n      center: [this.state.lat, this.state.lng],\n      zoom: this.state.zoom,\n      style: {\n        width: '100%',\n        height: '900px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n        url: \"https://cartodb-basemaps-{s}.global.ssl.fastly.net/light_all/{z}/{x}/{y}.png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(GeoJSON, {\n        ref: this.geoJsonLayer,\n        data: streetlights.features,\n        onEachFeature: this.onEachFixture\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this) : 'Data is loading...';\n  }\n\n}\n/*\n\n                {\n                this.props.streetlights['features'].map(streetlight => {\n                    const point = [streetlight['geometry']['coordinates'][1], streetlight['geometry']['coordinates'][0]]\n                    \n                    return (\n                        <Marker position={point} key={streetlight['properties']['GRID_ADDRE']} >\n                        \n                        </Marker>\n                    )\n                })\n                \n                }\n\n                \n*/","map":{"version":3,"sources":["/Users/rakshitakaulgud/Documents/react/streetlights/src/components/MainMap.js"],"names":["React","Component","MapContainer","TileLayer","Marker","Popup","GeoJSON","Tooltip","streetlights","MainMap","constructor","props","context","state","lat","lng","zoom","showPreview","place","changeCountryColor","event","target","setStyle","color","fillColor","fillOpacity","onEachCountry","fixture","layer","lampCD","properties","LAMP_CD","console","log","bindPopup","countryName","options","Math","random","on","click","data","geoJsonLayer","createRef","render","width","height","features","onEachFixture"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,YAAT,EAAuBC,SAAvB,EAAkCC,MAAlC,EAA0CC,KAA1C,EAAiDC,OAAjD,EAA0DC,OAA1D,QAA0E,eAA1E;AACA,OAAOC,YAAP,MAAyB,sBAAzB;;AAEA,eAAe,MAAMC,OAAN,SAAsBR,SAAtB,CAAgC;AAM3CS,EAAAA,WAAW,CAACC,KAAD,EAAQC,OAAR,EAAiB;AACxB,UAAMD,KAAN,EAAaC,OAAb;AADwB,SAL5BC,KAK4B,GALpB;AACJC,MAAAA,GAAG,EAAE,OADD;AAEJC,MAAAA,GAAG,EAAE,CAAC,QAFF;AAGJC,MAAAA,IAAI,EAAE;AAHF,KAKoB;;AAAA,SAY5BC,WAZ4B,GAYbC,KAAD,IAAW,CACrB;AACH,KAd2B;;AAAA,SAe5BC,kBAf4B,GAeNC,KAAD,IAAW;AAC5BA,MAAAA,KAAK,CAACC,MAAN,CAAaC,QAAb,CAAsB;AACpBC,QAAAA,KAAK,EAAE,OADa;AAEpBC,QAAAA,SAAS,EAAE,KAAKX,KAAL,CAAWU,KAFF;AAGpBE,QAAAA,WAAW,EAAE;AAHO,OAAtB;AAKH,KArB2B;;AAAA,SAsB5BC,aAtB4B,GAsBZ,CAACC,OAAD,EAAUC,KAAV,KAAoB;AAChC,YAAMC,MAAM,GAAGF,OAAO,CAACG,UAAR,CAAmBC,OAAlC;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYJ,MAAZ;AACAD,MAAAA,KAAK,CAACM,SAAN,CAAgBC,WAAhB;AAEAP,MAAAA,KAAK,CAACQ,OAAN,CAAcX,WAAd,GAA4BY,IAAI,CAACC,MAAL,EAA5B,CALgC,CAKW;AAC3C;AACA;;AAEAV,MAAAA,KAAK,CAACW,EAAN,CAAS;AACPC,QAAAA,KAAK,EAAE,KAAKrB;AADL,OAAT;AAGH,KAlC2B;;AAGxB,SAAKN,KAAL,GAAa;AACTC,MAAAA,GAAG,EAAE,OADI;AAETC,MAAAA,GAAG,EAAE,CAAC,OAFG;AAGTC,MAAAA,IAAI,EAAE,EAHG;AAITyB,MAAAA,IAAI,EAAE;AAJG,KAAb;AAOA,SAAKC,YAAL,gBAAoB1C,KAAK,CAAC2C,SAAN,EAApB;AACH;;AAyBDC,EAAAA,MAAM,GAAG;AACL,WACI,KAAKjC,KAAL,CAAWH,YAAX,gBAEA,QAAC,YAAD;AACO,MAAA,MAAM,EAAE,CAAC,KAAKK,KAAL,CAAWC,GAAZ,EAAiB,KAAKD,KAAL,CAAWE,GAA5B,CADf;AAEO,MAAA,IAAI,EAAE,KAAKF,KAAL,CAAWG,IAFxB;AAGO,MAAA,KAAK,EAAE;AAAE6B,QAAAA,KAAK,EAAE,MAAT;AAAiBC,QAAAA,MAAM,EAAE;AAAzB,OAHd;AAAA,8BAKI,QAAC,SAAD;AACI,QAAA,GAAG,EAAC;AADR;AAAA;AAAA;AAAA;AAAA,cALJ,eAQI,QAAC,OAAD;AAAS,QAAA,GAAG,EAAE,KAAKJ,YAAnB;AAAiC,QAAA,IAAI,EAAElC,YAAY,CAACuC,QAApD;AAA8D,QAAA,aAAa,EAAE,KAAKC;AAAlF;AAAA;AAAA;AAAA;AAAA,cARJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFA,GAaA,oBAdJ;AAgBH;;AA3D0C;AA+D/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { Component } from 'react'\nimport { MapContainer, TileLayer, Marker, Popup, GeoJSON, Tooltip  } from 'react-leaflet'\nimport streetlights from '../streetlights.json';\n\nexport default class MainMap extends Component {\n    state = {\n        lat: 37.7749,\n        lng: -122.4194,\n        zoom: 13,\n    }\n    constructor(props, context) {\n        super(props, context);\n\n        this.state = {\n            lat: 38.0293, \n            lng: -78.4767,\n            zoom: 13,\n            data: []\n        };\n        \n        this.geoJsonLayer = React.createRef();\n    }\n    showPreview = (place) => {\n        // show place's description\n    }\n    changeCountryColor = (event) => {\n        event.target.setStyle({\n          color: \"green\",\n          fillColor: this.state.color,\n          fillOpacity: 1,\n        });\n    };\n    onEachCountry = (fixture, layer) => {\n        const lampCD = fixture.properties.LAMP_CD;\n        console.log(lampCD);\n        layer.bindPopup(countryName);\n    \n        layer.options.fillOpacity = Math.random(); //0-1 (0.1, 0.2, 0.3)\n        // const colorIndex = Math.floor(Math.random() * this.colors.length);\n        // layer.options.fillColor = this.colors[colorIndex]; //0\n    \n        layer.on({\n          click: this.changeCountryColor,\n        });\n    };\n    \n    render() {\n        return(\n            this.props.streetlights ?\n  \n            <MapContainer \n                   center={[this.state.lat, this.state.lng]} \n                   zoom={this.state.zoom} \n                   style={{ width: '100%', height: '900px'}}\n                >\n                <TileLayer\n                    url='https://cartodb-basemaps-{s}.global.ssl.fastly.net/light_all/{z}/{x}/{y}.png'\n                />\n                <GeoJSON ref={this.geoJsonLayer} data={streetlights.features} onEachFeature={this.onEachFixture}/>\n            </MapContainer>\n        :\n            'Data is loading...'\n        )\n    }\n\n}\n\n/*\n\n                {\n                this.props.streetlights['features'].map(streetlight => {\n                    const point = [streetlight['geometry']['coordinates'][1], streetlight['geometry']['coordinates'][0]]\n                    \n                    return (\n                        <Marker position={point} key={streetlight['properties']['GRID_ADDRE']} >\n                        \n                        </Marker>\n                    )\n                })\n                \n                }\n\n                \n*/"]},"metadata":{},"sourceType":"module"}